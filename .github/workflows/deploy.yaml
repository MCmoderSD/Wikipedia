name: Deploy

on:
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-24.04
    steps:

      - name: Set up JDK 21
        uses: actions/setup-java@v4.6.0
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Extract version and artifact name
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          ARTIFACT=$(mvn help:evaluate -Dexpression=project.build.finalName -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "artifact=$ARTIFACT" >> $GITHUB_ENV

      - name: Set up Parameters
        run: |
          REPO=$(basename $GITHUB_REPOSITORY)
          echo "repository=$REPO" >> $GITHUB_ENV
          echo "token=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

      - name: Set up settings.xml
        run: |
          echo "<settings xmlns=\"https://maven.apache.org/SETTINGS/1.0.0\"" > ~/.m2/settings.xml
          echo "    xmlns:xsi=\"https://www.w3.org/2001/XMLSchema-instance\"" >> ~/.m2/settings.xml
          echo "    xsi:schemaLocation=\"https://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\">" >> ~/.m2/settings.xml
          echo "    <activeProfiles>" >> ~/.m2/settings.xml
          echo "        <activeProfile>github</activeProfile>" >> ~/.m2/settings.xml
          echo "    </activeProfiles>" >> ~/.m2/settings.xml
          echo "    <profiles>" >> ~/.m2/settings.xml
          echo "        <profile>" >> ~/.m2/settings.xml
          echo "            <id>github</id>" >> ~/.m2/settings.xml
          echo "            <repositories>" >> ~/.m2/settings.xml
          echo "                <repository>" >> ~/.m2/settings.xml
          echo "                    <id>central</id>" >> ~/.m2/settings.xml 
          echo "                    <url>https://repo1.maven.org/maven2</url>" >> ~/.m2/settings.xml
          echo "                </repository>" >> ~/.m2/settings.xml
          echo "                <repository>" >> ~/.m2/settings.xml
          echo "                    <id>${{ env.repository}}</id>" >> ~/.m2/settings.xml
          echo "                    <url>https://maven.pkg.github.com/${{ github.repository }}</url>" >> ~/.m2/settings.xml
          echo "                    <snapshots>" >> ~/.m2/settings.xml
          echo "                        <enabled>false</enabled>" >> ~/.m2/settings.xml
          echo "                    </snapshots>" >> ~/.m2/settings.xml
          echo "                </repository>" >> ~/.m2/settings.xml
          echo "            </repositories>" >> ~/.m2/settings.xml
          echo "        </profile>" >> ~/.m2/settings.xml
          echo "    </profiles>" >> ~/.m2/settings.xml
          echo "    <servers>" >> ~/.m2/settings.xml
          echo "        <server>" >> ~/.m2/settings.xml
          echo "            <id>${{ env.repository}}</id>" >> ~/.m2/settings.xml
          echo "            <username>${{ github.actor }}</username>" >> ~/.m2/settings.xml
          echo "            <password>${{ env.token }}</password>" >> ~/.m2/settings.xml
          echo "        </server>" >> ~/.m2/settings.xml
          echo "    </servers>" >> ~/.m2/settings.xml
          echo "</settings>" >> ~/.m2/settings.xml

      - name: Build and Deploy
        run: mvn clean install deploy

      - name: Install GitHub CLI and authenticate
        run: |
          curl -sSL https://github.com/cli/cli/releases/download/v2.63.2/gh_2.63.2_linux_amd64.deb -o gh-cli.deb
          sudo dpkg -i gh-cli.deb
          sudo apt install -f
          echo ${{ env.token }} | gh auth login --with-token

      - name: Check for existing release
        run: |
          VERSION="${{ env.version }}"
          TAG_EXISTS=$(gh release view "$VERSION" --json tagName --jq ".tagName" 2>&1 || true)
          echo "TAG_EXISTS: $TAG_EXISTS"
          if [[ "$TAG_EXISTS" == *"release not found"* ]]; then
            echo "No release tag found for version $VERSION."
          else
            echo "Release tag found: $TAG_EXISTS"
            echo "Deleting release and tag: $TAG_EXISTS"
            gh release delete "$TAG_EXISTS" -y --cleanup-tag
            if git rev-parse "$TAG_EXISTS" >/dev/null 2>&1; then
              git tag -d "$TAG_EXISTS"
              git push origin --delete "$TAG_EXISTS"
            else
              echo "Tag $TAG_EXISTS not found locally."
            fi
          fi

      - name: Calculate Hashes
        run: |
          FILE=target/${{ env.artifact }}.jar
          MD5=$(md5sum "$FILE" | cut -d ' ' -f 1)
          SHA1=$(sha1sum "$FILE" | cut -d ' ' -f 1)
          SHA256=$(sha256sum "$FILE" | cut -d ' ' -f 1)
          echo "md5=$MD5" >> $GITHUB_ENV
          echo "sha1=$SHA1" >> $GITHUB_ENV
          echo "sha256=$SHA256" >> $GITHUB_ENV
          echo "file=$FILE" >> $GITHUB_ENV        

      - name: Create new release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.file }}
          tag_name: ${{ env.version }}
          name: "${{ env.repository}} - Release ${{ env.version }}"
          body: |
            **Full Changelog**: https://github.com/MCmoderSD/GitHubActionsTest/commits/${{ env.version }}


            ## Checksums:

            - MD5: ${{ env.md5 }}
            - SHA1: ${{ env.sha1 }}
            - SHA256: ${{ env.sha256 }}